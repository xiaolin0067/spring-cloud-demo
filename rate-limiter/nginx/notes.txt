# 根据IP地址限制访问速率
# 1) 参数1 $binary_remote_addr nginx系统变量，其中binary_表示缩写内存占用，remote_addr代表通过IP地址来限流
# 2) 参数2 zone=iplimit:20m 定义了一块名为iplimit的20m大小的内存区域，用于记录访问频率信息
# 3) 参数3 rate=1r/s 标识访问限制频率，1 request / secends
limit_req_zone $binary_remote_addr zone=iplimit:20m rate=10r/s;

# 根据服务器级别做限流
limit_req_zone $server_name zone=serverlimit:20m rate=1r/s;

# 基于连接数的限流, Tips: 浏览器访同一个URL时是串行访问
limit_conn_zone $binary_remote_addr zone=ipconn:20m;
limit_conn_zone $server_name zone=serverconn:20m;

server {
    # 此处没有写listen，默认为80，通过server_name来路由
    server_name  www.training.com;

    location /access-limit/ {
        proxy_pass http://192.168.3.13:10086/;

        # 基于IP地址的限制
        # zone=iplimit 引用limit_req_zone中的zone变量的限制规则
        # burst=2 设置一个大小为2个请求的缓冲区域，请求数量超过限流频率时，将其放入缓冲区
        # nodelay 缓冲区满后，拒绝请求，返回503异常
        limit_req zone=iplimit burst=2 nodelay;

        # 根据服务器级别做限流，多个限流规则以哪个先到达条件
        limit_req zone=serverlimit burst=2 nodelay;

        # 每个server_name最多保持100个连接
        limit_conn serverconn 100;

        # 每个IP最多保持1个连接
        limit_conn ipconn 1;

        # 指定请求频率限制返回的错误码
        limit_req_status 504;
        # 指定连接数量限制返回的错误码
        limit_conn_status 503;
    }
}




彩蛋
location /download/ {
    # 100m后开始限速
    limit_rate_after 100m;
    # 限速
    limit_rate 256k;
}
