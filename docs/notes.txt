微服务优点：
1、快速响应变更：微服务特点单一职责、独立部署，使得可以快速响应变更
2、独立扩展：边界清晰，不过度受制于技术栈（服务选择自己的技术栈空间较大）
3、精粒度业务控制：降级熔断，局部限流（局部服务限流）
4、面向业务/领域模型：不依赖数据模型、易于抽象（服务通过接口暴露给其他服务，其他服务无需了解当前服务的数据库结构和变动）
缺点：
1、部署结构复杂，模块多，需要安装额外组件
2、依赖平台的支撑，研发成本，依赖微服务组件
3、分布式问题，一致性，异常补偿
4、架构微服务拆分水平，拆分粒度

微服务改造：
抗压维度：低频瞬时流量、高频匀速流量、低频场景
业务维度：定时任务、主链路用户场景、运营场景
指导方针：隔离业务场景（避免边缘业务影响主要业务）、剥离高频接口

是否对spring cloud的版本升级：要更新，但不追新
1、Tech Stack Review，半年度/年度
2、持续关注新的大版本，（新功能、新组件)
3、只采用SR发布版，绝不冒进
4、POC先行，全链路测试+回滚计划

技术选型：对当前业务的支持、团队技术栈&学习成本、未来研发支持(社区，商业公司)、替换成本&运维成本







